{"version":3,"file":"index.154ac900.js","sources":["../../packages/mini/krill-parser.js","../../packages/mini/mini.mjs"],"sourcesContent":["// Generated by Peggy 2.0.1.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \".\";\n  var peg$c1 = \"-\";\n  var peg$c2 = \"+\";\n  var peg$c3 = \"0\";\n  var peg$c4 = \",\";\n  var peg$c5 = \"|\";\n  var peg$c6 = \"\\\"\";\n  var peg$c7 = \"'\";\n  var peg$c8 = \"#\";\n  var peg$c9 = \"^\";\n  var peg$c10 = \"_\";\n  var peg$c11 = \":\";\n  var peg$c12 = \"[\";\n  var peg$c13 = \"]\";\n  var peg$c14 = \"<\";\n  var peg$c15 = \">\";\n  var peg$c16 = \"@\";\n  var peg$c17 = \"!\";\n  var peg$c18 = \"(\";\n  var peg$c19 = \")\";\n  var peg$c20 = \"/\";\n  var peg$c21 = \"*\";\n  var peg$c22 = \"%\";\n  var peg$c23 = \"?\";\n  var peg$c24 = \"struct\";\n  var peg$c25 = \"target\";\n  var peg$c26 = \"euclid\";\n  var peg$c27 = \"slow\";\n  var peg$c28 = \"rotL\";\n  var peg$c29 = \"rotR\";\n  var peg$c30 = \"fast\";\n  var peg$c31 = \"scale\";\n  var peg$c32 = \"//\";\n  var peg$c33 = \"cat\";\n  var peg$c34 = \"$\";\n  var peg$c35 = \"setcps\";\n  var peg$c36 = \"setbpm\";\n  var peg$c37 = \"hush\";\n\n  var peg$r0 = /^[1-9]/;\n  var peg$r1 = /^[eE]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\n\\r\\t]/;\n  var peg$r4 = /^[0-9a-zA-Z~]/;\n  var peg$r5 = /^[^\\n]/;\n\n  var peg$e0 = peg$otherExpectation(\"number\");\n  var peg$e1 = peg$literalExpectation(\".\", false);\n  var peg$e2 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e4 = peg$literalExpectation(\"-\", false);\n  var peg$e5 = peg$literalExpectation(\"+\", false);\n  var peg$e6 = peg$literalExpectation(\"0\", false);\n  var peg$e7 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e8 = peg$otherExpectation(\"whitespace\");\n  var peg$e9 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false);\n  var peg$e10 = peg$literalExpectation(\",\", false);\n  var peg$e11 = peg$literalExpectation(\"|\", false);\n  var peg$e12 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e13 = peg$literalExpectation(\"'\", false);\n  var peg$e14 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"z\"], [\"A\", \"Z\"], \"~\"], false, false);\n  var peg$e15 = peg$literalExpectation(\"#\", false);\n  var peg$e16 = peg$literalExpectation(\"^\", false);\n  var peg$e17 = peg$literalExpectation(\"_\", false);\n  var peg$e18 = peg$literalExpectation(\":\", false);\n  var peg$e19 = peg$literalExpectation(\"[\", false);\n  var peg$e20 = peg$literalExpectation(\"]\", false);\n  var peg$e21 = peg$literalExpectation(\"<\", false);\n  var peg$e22 = peg$literalExpectation(\">\", false);\n  var peg$e23 = peg$literalExpectation(\"@\", false);\n  var peg$e24 = peg$literalExpectation(\"!\", false);\n  var peg$e25 = peg$literalExpectation(\"(\", false);\n  var peg$e26 = peg$literalExpectation(\")\", false);\n  var peg$e27 = peg$literalExpectation(\"/\", false);\n  var peg$e28 = peg$literalExpectation(\"*\", false);\n  var peg$e29 = peg$literalExpectation(\"%\", false);\n  var peg$e30 = peg$literalExpectation(\"?\", false);\n  var peg$e31 = peg$literalExpectation(\"struct\", false);\n  var peg$e32 = peg$literalExpectation(\"target\", false);\n  var peg$e33 = peg$literalExpectation(\"euclid\", false);\n  var peg$e34 = peg$literalExpectation(\"slow\", false);\n  var peg$e35 = peg$literalExpectation(\"rotL\", false);\n  var peg$e36 = peg$literalExpectation(\"rotR\", false);\n  var peg$e37 = peg$literalExpectation(\"fast\", false);\n  var peg$e38 = peg$literalExpectation(\"scale\", false);\n  var peg$e39 = peg$literalExpectation(\"//\", false);\n  var peg$e40 = peg$classExpectation([\"\\n\"], true, false);\n  var peg$e41 = peg$literalExpectation(\"cat\", false);\n  var peg$e42 = peg$literalExpectation(\"$\", false);\n  var peg$e43 = peg$literalExpectation(\"setcps\", false);\n  var peg$e44 = peg$literalExpectation(\"setbpm\", false);\n  var peg$e45 = peg$literalExpectation(\"hush\", false);\n\n  var peg$f0 = function() { return parseFloat(text()); };\n  var peg$f1 = function(chars) { return chars.join(\"\") };\n  var peg$f2 = function(s) { return s};\n  var peg$f3 = function(sc) { sc.arguments_.alignment = \"t\"; return sc;};\n  var peg$f4 = function(a) { return { weight: a} };\n  var peg$f5 = function(a) { return { replicate: a  } };\n  var peg$f6 = function(p, s, r) { return { operator : { type_: \"bjorklund\", arguments_ :{ pulse: p, step:s, rotation:r || 0 } } } };\n  var peg$f7 = function(a) { return { operator : { type_: \"stretch\", arguments_ :{ amount:a } } } };\n  var peg$f8 = function(a) { return { operator : { type_: \"stretch\", arguments_ :{ amount:\"1/\"+a } } } };\n  var peg$f9 = function(a) { return { operator : { type_: \"fixed-step\", arguments_ :{ amount:a } } } };\n  var peg$f10 = function(a) { return { operator : { type_: \"degradeBy\", arguments_ :{ amount:(a? a : 0.5) } } } };\n  var peg$f11 = function(s, o) { return new ElementStub(s, o);};\n  var peg$f12 = function(s) { return new PatternStub(s,\"h\"); };\n  var peg$f13 = function(tail) { return { alignment: 'v', list: tail }; };\n  var peg$f14 = function(tail) { return { alignment: 'r', list: tail }; };\n  var peg$f15 = function(head, tail) { if (tail && tail.list.length > 0) { return new PatternStub([head, ...tail.list], tail.alignment); } else { return head; } };\n  var peg$f16 = function(sc) { return sc; };\n  var peg$f17 = function(s) { return { name: \"struct\", args: { sequence:s }}};\n  var peg$f18 = function(s) { return { name: \"target\", args : { name:s}}};\n  var peg$f19 = function(p, s, r) { return { name: \"bjorklund\", args :{ pulse: parseInt(p), step:parseInt(s) }}};\n  var peg$f20 = function(a) { return { name: \"stretch\", args :{ amount: a}}};\n  var peg$f21 = function(a) { return { name: \"shift\", args :{ amount: \"-\"+a}}};\n  var peg$f22 = function(a) { return { name: \"shift\", args :{ amount: a}}};\n  var peg$f23 = function(a) { return { name: \"stretch\", args :{ amount: \"1/\"+a}}};\n  var peg$f24 = function(s) { return { name: \"scale\", args :{ scale: s.join(\"\")}}};\n  var peg$f25 = function(s, v) { return v};\n  var peg$f26 = function(s, ss) { ss.unshift(s); return new PatternStub(ss,\"t\"); };\n  var peg$f27 = function(sg) {return sg};\n  var peg$f28 = function(o, soc) { return new OperatorStub(o.name,o.args,soc)};\n  var peg$f29 = function(sc) { return sc };\n  var peg$f30 = function(c) { return c };\n  var peg$f31 = function(v) { return new CommandStub(\"setcps\", { value: v})};\n  var peg$f32 = function(v) { return new CommandStub(\"setcps\", { value: (v/120/2)})};\n  var peg$f33 = function() { return new CommandStub(\"hush\")};\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsestatement();\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseminus();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$parseint();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsefrac();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseexp();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_point() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit1_9() {\n    var s0;\n\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsee() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsee();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseminus();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseplus();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parseDIGIT();\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseDIGIT();\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s1 = [s1, s2, s3];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedecimal_point();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDIGIT();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parsezero();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigit1_9();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseminus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s0 = peg$c1;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseplus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c2;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsezero() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c3;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDIGIT() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e8); }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c4;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepipe() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 124) {\n      s2 = peg$c5;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsequote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c6;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep_char() {\n    var s0;\n\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c1;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e4); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s0 = peg$c8;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e15); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s0 = peg$c0;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e1); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 94) {\n              s0 = peg$c9;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e16); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 95) {\n                s0 = peg$c10;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e17); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s0 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$e18); }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = [];\n    s3 = peg$parsestep_char();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsestep_char();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f1(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesub_cycle() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c12;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e19); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsestack_or_choose();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s6 = peg$c13;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e20); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f2(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetimeline() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s2 = peg$c14;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s6 = peg$c15;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e22); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f3(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice() {\n    var s0;\n\n    s0 = peg$parsestep();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesub_cycle();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetimeline();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_modifier() {\n    var s0;\n\n    s0 = peg$parseslice_weight();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseslice_bjorklund();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseslice_slow();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseslice_fast();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseslice_fixed_step();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseslice_replicate();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseslice_degrade();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_weight() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c16;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f4(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_replicate() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s1 = peg$c17;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_bjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c18;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e25); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsecomma();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parsenumber();\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parsews();\n            s9 = peg$parsecomma();\n            if (s9 === peg$FAILED) {\n              s9 = null;\n            }\n            s10 = peg$parsews();\n            s11 = peg$parsenumber();\n            if (s11 === peg$FAILED) {\n              s11 = null;\n            }\n            s12 = peg$parsews();\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s13 = peg$c19;\n              peg$currPos++;\n            } else {\n              s13 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e26); }\n            }\n            if (s13 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f6(s3, s7, s11);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_slow() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c20;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_fast() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e28); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_fixed_step() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e29); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f9(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_degrade() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s1 = peg$c23;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f10(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_with_modifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseslice();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice_modifier();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f11(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesingle_cycle() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseslice_with_modifier();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseslice_with_modifier();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsecomma();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsecomma();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesingle_cycle();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f13(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsechoose_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsepipe();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsepipe();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesingle_cycle();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_or_choose() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesingle_cycle();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestack_tail();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsechoose_tail();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f15(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsequote();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsestack_or_choose();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsequote();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator() {\n    var s0;\n\n    s0 = peg$parsescale();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseslow();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefast();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetarget();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsebjorklund();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsestruct();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parserotR();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parserotL();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestruct() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c24) {\n      s1 = peg$c24;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsesequence_or_operator();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetarget() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsestep();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f18(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsebjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parseint();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parseint();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parseint();\n          if (s7 === peg$FAILED) {\n            s7 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f19(s3, s5, s7);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslow() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotL() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f21(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotR() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f22(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefast() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f23(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsestep_char();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsestep_char();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f24(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$r5.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e40); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$r5.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e40); }\n        }\n      }\n      s1 = [s1, s2];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e41); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s3 = peg$c12;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e19); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsesequence_or_operator();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$currPos;\n          s8 = peg$parsecomma();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parsesequence_or_operator();\n            if (s9 !== peg$FAILED) {\n              peg$savedPos = s7;\n              s7 = peg$f25(s5, s9);\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$currPos;\n            s8 = peg$parsecomma();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parsesequence_or_operator();\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s7;\n                s7 = peg$f25(s5, s9);\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          }\n          s7 = peg$parsews();\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c13;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e20); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f26(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_or_group() {\n    var s0;\n\n    s0 = peg$parsecat();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesequence();\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_or_operator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence_or_group();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = [];\n      s4 = peg$parsecomment();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsecomment();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s1);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseoperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s3 = peg$c34;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e42); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          s5 = peg$parsesequence_or_operator();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f28(s1, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequ_or_operator_or_comment() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence_or_operator();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecomment();\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_definition() {\n    var s0;\n\n    s0 = peg$parsesequ_or_operator_or_comment();\n\n    return s0;\n  }\n\n  function peg$parsecommand() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsesetcps();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsesetbpm();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsehush();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f30(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetcps() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e43); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetbpm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e44); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsehush() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e45); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f33();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestatement() {\n    var s0;\n\n    s0 = peg$parsesequence_definition();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecommand();\n    }\n\n    return s0;\n  }\n\n\n  var PatternStub = function(source, alignment)\n  {\n    this.type_ = \"pattern\";\n    this.arguments_ = { alignment : alignment};\n    this.source_ = source;\n  }\n\n  var OperatorStub = function(name, args, source)\n  {\n    this.type_ = name;\n    this.arguments_ = args;\n    this.source_ = source;\n  }\n\n  var ElementStub = function(source, options)\n  {\n    this.type_ = \"element\";\n    this.source_ = source;\n    this.options_ = options;\n    this.location_ = location();\n  }\n\n  var CommandStub = function(name, options)\n  {\n    this.type_ = \"command\";\n    this.name_ = name;\n    this.options_ = options;\n  }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","/*\nmini.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/mini/mini.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as krill from './krill-parser.js';\nimport * as strudel from '@strudel.cycles/core';\nimport { addMiniLocations } from '@strudel.cycles/eval/shapeshifter.mjs';\n\nconst { pure, Pattern, Fraction, stack, slowcat, sequence, timeCat, silence, reify } = strudel;\n\nvar _seedState = 0;\nconst randOffset = 0.0002;\n\nfunction _nextSeed() {\n  return _seedState++;\n}\n\nconst applyOptions = (parent) => (pat, i) => {\n  const ast = parent.source_[i];\n  const options = ast.options_;\n  const operator = options?.operator;\n  if (operator) {\n    switch (operator.type_) {\n      case 'stretch':\n        const speed = Fraction(operator.arguments_.amount).inverse();\n        return reify(pat).fast(speed);\n      case 'bjorklund':\n        return pat.euclid(operator.arguments_.pulse, operator.arguments_.step, operator.arguments_.rotation);\n      case 'degradeBy':\n        return reify(pat)._degradeByWith(strudel.rand.early(randOffset * _nextSeed()).segment(1), operator.arguments_.amount);\n      // TODO: case 'fixed-step': \"%\"\n    }\n    console.warn(`operator \"${operator.type_}\" not implemented`);\n  }\n  if (options?.weight) {\n    // weight is handled by parent\n    return pat;\n  }\n  // TODO: bjorklund e.g. \"c3(5,8)\"\n  const unimplemented = Object.keys(options || {}).filter((key) => key !== 'operator');\n  if (unimplemented.length) {\n    console.warn(\n      `option${unimplemented.length > 1 ? 's' : ''} ${unimplemented.map((o) => `\"${o}\"`).join(', ')} not implemented`,\n    );\n  }\n  return pat;\n};\n\nfunction resolveReplications(ast) {\n  // the general idea here: x!3 = [x*3]@3\n  // could this be made easier?!\n  ast.source_ = ast.source_.map((child) => {\n    const { replicate, ...options } = child.options_ || {};\n    if (replicate) {\n      return {\n        ...child,\n        options_: { ...options, weight: replicate },\n        source_: {\n          type_: 'pattern',\n          arguments_: {\n            alignment: 'h',\n          },\n          source_: [\n            {\n              type_: 'element',\n              source_: child.source_,\n              location_: child.location_,\n              options_: {\n                operator: {\n                  type_: 'stretch',\n                  arguments_: { amount: Fraction(replicate).inverse().toString() },\n                },\n              },\n            },\n          ],\n        },\n      };\n    }\n    return child;\n  });\n}\n\nexport function patternifyAST(ast) {\n  switch (ast.type_) {\n    case 'pattern':\n      resolveReplications(ast);\n      const children = ast.source_.map(patternifyAST).map(applyOptions(ast));\n      const alignment = ast.arguments_.alignment;\n      if (alignment === 'v') {\n        return stack(...children);\n      }\n      if (alignment === 'r') {\n        return strudel.chooseInWith(strudel.rand.early(randOffset * _nextSeed()).segment(1), children);\n      }\n      const weightedChildren = ast.source_.some((child) => !!child.options_?.weight);\n      if (!weightedChildren && alignment === 't') {\n        return slowcat(...children);\n      }\n      if (weightedChildren) {\n        const pat = timeCat(...ast.source_.map((child, i) => [child.options_?.weight || 1, children[i]]));\n        if (alignment === 't') {\n          const weightSum = ast.source_.reduce((sum, child) => sum + (child.options_?.weight || 1), 0);\n          return pat._slow(weightSum); // timecat + slow\n        }\n        return pat;\n      }\n      return sequence(...children);\n    case 'element':\n      if (ast.source_ === '~') {\n        return silence;\n      }\n      if (typeof ast.source_ !== 'object') {\n        if (!addMiniLocations) {\n          return ast.source_;\n        }\n        if (!ast.location_) {\n          console.warn('no location for', ast);\n          return ast.source_;\n        }\n        const { start, end } = ast.location_;\n        const value = !isNaN(Number(ast.source_)) ? Number(ast.source_) : ast.source_;\n        // the following line expects the shapeshifter append .withMiniLocation\n        // because location_ is only relative to the mini string, but we need it relative to whole code\n        return pure(value).withLocation([start.line, start.column, start.offset], [end.line, end.column, end.offset]);\n      }\n      return patternifyAST(ast.source_);\n    case 'stretch':\n      return patternifyAST(ast.source_).slow(ast.arguments_.amount);\n    /* case 'scale':\n      let [tonic, scale] = Scale.tokenize(ast.arguments_.scale);\n      const intervals = Scale.get(scale).intervals;\n      const pattern = patternifyAST(ast.source_);\n      tonic = tonic || 'C4';\n      // console.log('scale', ast, pattern, tonic, scale);\n      console.log('tonic', tonic);\n      return pattern.fmap((step: any) => {\n        step = Number(step);\n        if (isNaN(step)) {\n          console.warn(`scale step \"${step}\" not a number`);\n          return step;\n        }\n        const octaves = Math.floor(step / intervals.length);\n        const mod = (n: number, m: number): number => (n < 0 ? mod(n + m, m) : n % m);\n        const index = mod(step, intervals.length); // % with negative numbers. e.g. -1 % 3 = 2\n        const interval = Interval.add(intervals[index], Interval.fromSemitones(octaves * 12));\n        return Note.transpose(tonic, interval || '1P');\n      }); */\n    /* case 'struct':\n      // TODO:\n      return silence; */\n    default:\n      console.warn(`node type \"${ast.type_}\" not implemented -> returning silence`);\n      return silence;\n  }\n}\n\n// mini notation only (wraps in \"\")\nexport const mini = (...strings) => {\n  const pats = strings.map((str) => {\n    const ast = krill.parse(`\"${str}\"`);\n    return patternifyAST(ast);\n  });\n  return sequence(...pats);\n};\n\n// includes haskell style (raw krill parsing)\nexport const h = (string) => {\n  const ast = krill.parse(string);\n  // console.log('ast', ast);\n  return patternifyAST(ast);\n};\n\n// shorthand for mini\nPattern.prototype.define('mini', mini, { composable: true });\nPattern.prototype.define('m', mini, { composable: true });\nPattern.prototype.define('h', h, { composable: true });\n\nexport function minify(thing) {\n  if (typeof thing === 'string') {\n    return mini(thing);\n  }\n  return reify(thing);\n}\n"],"names":["strudel.rand","strudel.chooseInWith","krill.parse"],"mappings":"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"}